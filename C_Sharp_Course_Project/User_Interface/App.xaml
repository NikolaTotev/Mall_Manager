<Application x:Class="User_Interface.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:User_Interface"
             StartupUri="MainWindow.xaml">
    <Application.Resources>

        <FontFamily x:Key="Montserrat">pack://application:,,,/Resources/Fonts/#Montserrat</FontFamily>
        <Brush x:Key="OrangeAccent">#FFA630</Brush>
        <Brush x:Key="NavyBlueBase">#3C4F76</Brush>
        <Brush x:Key="OrangeButtonHighlight">#FFEFE2</Brush>
        <Brush x:Key="OrangeButtonPressed">#FFDEC3</Brush>
        <Brush x:Key="BorderButtonPressed">#00A7E1</Brush>
        <Brush x:Key="TextboxPrompt">#A2A9B9</Brush>

        <Brush x:Key="ScheduledTask">#62B6CB</Brush>
        <Brush x:Key="InProgressTask">#BEE9e8</Brush>
        <Brush x:Key="Completed">#CAE9ff</Brush>
        <Brush x:Key="FailedTask">#F5AC72</Brush>
        <ToolTip x:Key="BtnAddMallTip" Content="Adds a new mall based on your input."></ToolTip>
        <ToolTip x:Key="CancelTip" Content="Returns to previous page."></ToolTip>
        <ToolTip x:Key="BtnOpenAddMenu" Content="Opens add menu"></ToolTip>
        <ToolTip x:Key="BtnOpenRentalSpaces" Content="Shows all rental spaces for the mall."></ToolTip>
        <ToolTip x:Key="BtnOpenMallActivities`" Content="Opens list of activities for the mall."></ToolTip>
        <ToolTip x:Key="BtnOpenMallStats" Content="Opens statistics menu for the mall."></ToolTip>

        <Style x:Key="BigRoundedButton" TargetType="{x:Type Button}">
            <Setter Property="Width" Value="200"></Setter>
            <Setter Property="Height" Value="200"></Setter>
            <Setter Property="Background" Value="White"></Setter>
            <Setter Property="Margin" Value="5"></Setter>
            <Setter Property="Template" Value="{DynamicResource RoundedButtonTemplate}"></Setter>
        </Style>

        <ControlTemplate x:Key="RoundedButtonTemplate" TargetType="{x:Type Button}">

            <Grid Height="200" Width="200">
                <Image Source="{TemplateBinding Tag}" Stretch="Fill"/>
                <Border x:Name="border" CornerRadius="30" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    <Border.Effect>
                        <DropShadowEffect ShadowDepth="2" BlurRadius="15" Opacity="0.4" Direction="270"/>
                    </Border.Effect>
                </Border>

            </Grid>

            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsDefaulted" Value="True" >
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="border" Value="{DynamicResource OrangeButtonHighlight}" />
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource OrangeAccent}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" TargetName="border" Value="{DynamicResource OrangeButtonPressed}"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource NavyBlueBase}"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                    <Setter Property="Foreground" Value="#FF838383"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>


        <Style x:Key="TextRoundedButton" TargetType="{x:Type Button}">
            <Setter Property="Width" Value="350"></Setter>
            <Setter Property="Height" Value="150"></Setter>
            <Setter Property="Background" Value="White"></Setter>
            <Setter Property="Margin" Value="5"></Setter>
            <Setter Property="Template" Value="{DynamicResource RoundedTextButtonTemplate}"></Setter>
        </Style>

        <ControlTemplate x:Key="RoundedTextButtonTemplate" TargetType="{x:Type Button}">

            <Grid>
                <Image Source="{TemplateBinding Tag}" Stretch="Fill"/>
                <Border x:Name="border" CornerRadius="30" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    <Border.Effect>
                        <DropShadowEffect ShadowDepth="2" BlurRadius="15" Opacity="0.4" Direction="270"/>
                    </Border.Effect>
                </Border>

            </Grid>

            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsDefaulted" Value="True" >
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="border" Value="{DynamicResource OrangeButtonHighlight}" />
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource OrangeAccent}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" TargetName="border" Value="{DynamicResource OrangeButtonPressed}"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource NavyBlueBase}"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                    <Setter Property="Foreground" Value="#FF838383"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </Application.Resources>
</Application>
