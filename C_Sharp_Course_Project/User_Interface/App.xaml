<Application x:Class="User_Interface.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:User_Interface"
             StartupUri="MainWindow.xaml">
    <Application.Resources>

        <FontFamily x:Key="Montserrat">pack://application:,,,/Resources/Fonts/#Montserrat</FontFamily>
        <Brush x:Key="OrangeAccent">#FFA630</Brush>
        <Brush x:Key="NavyBlueBase">#3C4F76</Brush>
        <Brush x:Key="OrangeButtonHighlight">#FFEFE2</Brush>
        <Brush x:Key="OrangeButtonPressed">#FFDEC3</Brush>
        <Brush x:Key="BorderButtonPressed">#00A7E1</Brush>
        <Brush x:Key="TextboxPrompt">#A2A9B9</Brush>
        <Color x:Key="OrangeButtonHighlightColor">#FFEFE2</Color>




        <Brush x:Key="ScheduledTask">#62B6CB</Brush>
        <Brush x:Key="InProgressTask">#BEE9e8</Brush>
        <Brush x:Key="Completed">#CAE9ff</Brush>
        <Brush x:Key="FailedTask">#F5AC72</Brush>
        <Brush x:Key="UndefinedTask">#A2A9B9</Brush>

        <ToolTip x:Key="BtnAddMallTip" Content="Adds a new mall based on your input."></ToolTip>
        <ToolTip x:Key="CancelTip" Content="Returns to previous page."></ToolTip>
        <ToolTip x:Key="BtnOpenAddMenu" Content="Opens add menu"></ToolTip>
        <ToolTip x:Key="BtnOpenRentalSpaces" Content="Shows all rental spaces for the mall."></ToolTip>
        <ToolTip x:Key="BtnOpenMallActivities`" Content="Opens list of activities for the mall."></ToolTip>
        <ToolTip x:Key="BtnOpenMallStats" Content="Opens statistics menu for the mall."></ToolTip>
        <DropShadowEffect x:Key="DropShadow" ShadowDepth="2" BlurRadius="15" Opacity="0.4" Direction="270"/>


        <Style x:Key="BigRoundedButton" TargetType="{x:Type Button}">
            <Setter Property="Width" Value="200"></Setter>
            <Setter Property="Height" Value="200"></Setter>
            <Setter Property="Background" Value="White"></Setter>
            <Setter Property="Margin" Value="5"></Setter>
            <Setter Property="Template" Value="{DynamicResource RoundedButtonTemplate}"></Setter>
        </Style>

        <ControlTemplate x:Key="RoundedButtonTemplate" TargetType="{x:Type Button}">

            <Grid Height="200" Width="200">
                <Image Source="{TemplateBinding Tag}" Stretch="Fill"/>
                <Border x:Name="border" CornerRadius="30" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    <Border.Effect>
                        <DropShadowEffect ShadowDepth="2" BlurRadius="15" Opacity="0.4" Direction="270"/>
                    </Border.Effect>
                </Border>

            </Grid>

            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsDefaulted" Value="True" >
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="border" Value="{DynamicResource OrangeButtonHighlight}" />
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource OrangeAccent}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" TargetName="border" Value="{DynamicResource OrangeButtonPressed}"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource NavyBlueBase}"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                    <Setter Property="Foreground" Value="#FF838383"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>


        <ControlTemplate x:Key="OrangeHighLight" TargetType="{x:Type Button}">

            <Grid>
                <Image Source="{TemplateBinding Tag}" Stretch="Fill"/>
                <Border x:Name="border" CornerRadius="10" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    <Border.Effect>
                        <DropShadowEffect ShadowDepth="2" BlurRadius="15" Opacity="0.4" Direction="270"/>
                    </Border.Effect>
                </Border>

            </Grid>

            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsDefaulted" Value="True" >
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="border" Value="{DynamicResource OrangeButtonHighlight}" />
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource OrangeAccent}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" TargetName="border" Value="{DynamicResource OrangeButtonPressed}"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource NavyBlueBase}"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                    <Setter Property="Foreground" Value="#FF838383"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>


        <ControlTemplate x:Key="BigOrangeHighlight" TargetType="{x:Type Button}">

            <Grid>
                <Image Source="{TemplateBinding Tag}" Stretch="Fill"/>
                <Border x:Name="border" CornerRadius="70" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    <Border.Effect>
                        <DropShadowEffect ShadowDepth="2" BlurRadius="15" Opacity="0.4" Direction="270"/>
                    </Border.Effect>
                </Border>

            </Grid>

            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsDefaulted" Value="True" >
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="border" Value="{DynamicResource OrangeButtonHighlight}" />
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource OrangeAccent}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" TargetName="border" Value="{DynamicResource OrangeButtonPressed}"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource NavyBlueBase}"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                    <Setter Property="Foreground" Value="#FF838383"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="TextRoundedButton" TargetType="{x:Type Button}">
            <Setter Property="Width" Value="350"></Setter>
            <Setter Property="Height" Value="150"></Setter>
            <Setter Property="Background" Value="White"></Setter>
            <Setter Property="Margin" Value="5"></Setter>
            <Setter Property="Template" Value="{DynamicResource RoundedTextButtonTemplate}"></Setter>
        </Style>

        <ControlTemplate x:Key="RoundedTextButtonTemplate" TargetType="{x:Type Button}">

            <Grid>
                <Image Source="{TemplateBinding Tag}" Stretch="Fill"/>
                <Border x:Name="border" CornerRadius="30" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    <Border.Effect>
                        <DropShadowEffect ShadowDepth="2" BlurRadius="15" Opacity="0.4" Direction="270"/>
                    </Border.Effect>
                </Border>

            </Grid>

            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsDefaulted" Value="True" >
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="border" Value="{DynamicResource OrangeButtonHighlight}" />
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource OrangeAccent}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" TargetName="border" Value="{DynamicResource OrangeButtonPressed}"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource NavyBlueBase}"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                    <Setter Property="Foreground" Value="#FF838383"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>


        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border
                  x:Name="Border" 
                  Grid.ColumnSpan="2"
                  CornerRadius="10"
                  Background="White"
                  BorderBrush="White"
                  BorderThickness="1" />
                <Border 
                  Grid.Column="0"
                  CornerRadius="10" 
                  Margin="1" 
                  Background="White" 
                  BorderBrush="White"
                  BorderThickness="0,0,1,0" 
                  Effect="{StaticResource DropShadow}"
                  />
                <Path 
                  x:Name="Arrow"
                  Grid.Column="1"     
                  Fill="{StaticResource OrangeAccent}"
                  StrokeThickness="40"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                />

            </Grid>
            <!--<ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#808080" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#E0E0E0" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                <Setter Property="Foreground" Value="#888888"/>
                <Setter TargetName="Arrow" Property="Fill" Value="#888888" />
            </Trigger>
        </ControlTemplate.Triggers>-->
        </ControlTemplate>

        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
            <Border x:Name="PART_ContentHost" Focusable="False" CornerRadius="10" Background="{TemplateBinding Background}" />
            
        </ControlTemplate>

        <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="Foreground" Value="{StaticResource NavyBlueBase}"/>
            <Setter Property="FontFamily" Value="{StaticResource Montserrat}"></Setter>
            <Setter Property="FontStyle" Value="Normal"></Setter>
            <Setter Property="FontWeight" Value="Medium"></Setter>
            <Setter Property="FontSize" Value="20"></Setter>
            <Setter Property="Padding" Value="10"></Setter>
            <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Center"></Setter>
            
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <ToggleButton 
                            Name="ToggleButton" 
                            Template="{StaticResource ComboBoxToggleButton}" 
                            Grid.Column="2" 
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                            </ToggleButton>
                            <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="3,3,23,3"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center" />
                            <TextBox x:Name="PART_EditableTextBox"
                            Style="{x:Null}" 
                            Template="{StaticResource ComboBoxTextBox}" 
                            HorizontalAlignment="Center" 
                            VerticalAlignment="Center" 
                            Focusable="True" 
                            Background="White"
                            Effect="{StaticResource DropShadow}"
                            Foreground="{StaticResource NavyBlueBase}"
                            Visibility="Hidden"
                            IsReadOnly="{TemplateBinding IsReadOnly}"/>
                            <Popup 
                            Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True" 
                            Focusable="False"
                            PopupAnimation="Slide">

                                <Grid Name="DropDown"
                              SnapsToDevicePixels="True"                
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border 
                                x:Name="DropDownBorder"
                                Background="White"
                                Effect="{StaticResource DropShadow}"
                                CornerRadius="10"
                                BorderThickness="1"
                                BorderBrush="Transparent"/>
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#888888"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                            </Trigger>
                            <Trigger Property="IsEditable"  Value="true">
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
            </Style.Triggers>
        </Style>

        <!-- SimpleStyles: ComboBoxItem -->
        <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="Foreground" Value="{StaticResource NavyBlueBase}"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="BorderBrush" Value="White"></Setter>
            <Setter Property="Background" Value="White"></Setter>
            <Setter Property="FontFamily" Value="{StaticResource Montserrat}"></Setter>
            <Setter Property="FontStyle" Value="Normal"></Setter>
            <Setter Property="FontWeight" Value="Medium"></Setter>
            <Setter Property="FontSize" Value="15"></Setter>
            <Setter Property="Margin" Value="5"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border Name="Border"
                              Padding="5"
                              Effect="{StaticResource DropShadow}"
                              CornerRadius="10"
                              SnapsToDevicePixels="true">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource OrangeButtonHighlight}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#888888"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>
